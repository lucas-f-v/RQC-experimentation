name: Python File Commit Trigger

on:
  push:
    paths:
      - '**/*.py'

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get Bearer Token
        id: get_token
        run: |
          response=$(curl --location --request POST 'https://idm.stackspot.com/stackspot/oidc/oauth/token' \
          --header 'Content-Type: application/x-www-form-urlencoded' \
          --data-urlencode 'client_id=f4096bfc-7f7c-4401-806f-411b19bd0959' \
          --data-urlencode 'grant_type=client_credentials' \
          --data-urlencode 'client_secret=S0P5rH66Sd8mh26K5RQnub0o21YaJDyJL0Mb6VRCXe84jpZAsbqi85SI5MgDu07i')
          echo "response=$response"
          token=$(echo $response | grep -oP '(?<="access_token":")[^"]*')
          echo "::set-output name=token::$token"

      - name: RQC1-post
        id: execute_rqc
        run: |
          token="${{ steps.get_token.outputs.token }}"
          response=$(curl -s -w "\n%{http_code}" -X POST "https://genai-code-buddy-api.stackspot.com/v1/quick-commands/create-execution/lfv-code-sec-analysis" \
          -H "Authorization: Bearer $token" \
          -H "Content-Type: application/json" \
          -d "{\"input_data\": \"Hi, how are you? This is an example of how to create Remote Quick Command.\"}")
          # Extract the status code and response body
          status_code=$(echo "$response" | tail -n1)
          response_body=$(echo "$response" | sed '$d')
          # Extract execution_id from the response body
          # Print the status code, response body
          echo "status_code=$status_code"
          echo "response_body=$response_body"
          # Set GitHub Actions outputs
          echo "::set-output name=status_code::$status_code"
          echo "::set-output name=api_response::$response_body"

      - name: Check API Response Status
        run: |
          if [ "${{ steps.execute_rqc.outputs.status_code }}" -eq 200 ]; then
            echo "Request was successful!"
          else
            echo "Request failed with status code ${{ steps.execute_rqc.outputs.status_code }}"
            exit 1
          fi

      - name: Display API Response
        run: |
          echo "API Response: ${{ steps.execute_rqc.outputs.api_response }}"

      - name: Get Execution Status
        id: get_execution_status
        run: |
          token="${{ steps.get_token.outputs.token }}"
          execution_id="${{ steps.execute_rqc.outputs.api_response }}"
          while true; do
            response=$(curl -s -X GET "https://genai-code-buddy-api.stackspot.com/v1/quick-commands/callback/$execution_id" \
            -H "Authorization: Bearer $token")
            # Print the response
            echo "Execution Status Response: $response"
            status=$(echo "$response" | grep -oP '(?<="status":")[^"]*')
            if [ "$status" != "RUNNING" ] && [ "$status" != "CREATED" ]; then
              break
            fi
            echo "Execution is still running, checking again in 5 seconds..."
            sleep 5
          done
          echo "::set-output name=response::$response"
      - name: Extract LLM Response
        id: extract-llm-response
        run: |
          response="${{ steps.get_execution_status.outputs.response }}"
          echo "Execution Status Response: $response"
          response_field=$(echo "$response" | jq -r '.steps[0].step_result.result')
          echo "Execution Status Response: $response_field"